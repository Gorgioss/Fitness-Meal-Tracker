import tkinter as tk
from tkinter import messagebox

class FitnessTrackerApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Fitness Tracker")
        
        # Initialize exercise and meal lists
        self.exercises = []
        self.meals = []
        
        # Create and pack widgets
        self.create_widgets()
    
    def create_widgets(self):
        # Exercise Logging Section
        tk.Label(self.root, text="Exercise Logging").pack()
        tk.Label(self.root, text="Exercise Type:").pack()
        self.exercise_entry = tk.Entry(self.root)
        self.exercise_entry.pack()
        tk.Label(self.root, text="Duration (minutes):").pack()
        self.duration_entry = tk.Entry(self.root)
        self.duration_entry.pack()
        tk.Button(self.root, text="Log Exercise", command=self.log_exercise).pack()
        
        # Meal Logging Section
        tk.Label(self.root, text="Meal Logging").pack()
        tk.Label(self.root, text="Meal Name:").pack()
        self.meal_entry = tk.Entry(self.root)
        self.meal_entry.pack()
        tk.Label(self.root, text="Calories:").pack()
        self.calories_entry = tk.Entry(self.root)
        self.calories_entry.pack()
        tk.Button(self.root, text="Log Meal", command=self.log_meal).pack()
        
        # View Progress Button
        tk.Button(self.root, text="View Progress", command=self.view_progress).pack()
    
    def log_exercise(self):
        exercise_type = self.exercise_entry.get()
        duration = self.duration_entry.get()
        
        # Input validation
        if not exercise_type or not duration:
            messagebox.showerror("Error", "Please fill in all fields.")
            return
        
        self.exercises.append({
            "Exercise Type": exercise_type,
            "Duration (minutes)": duration
        })
        
        messagebox.showinfo("Success", "Exercise logged successfully!")
        
        # Clear input fields
        self.exercise_entry.delete(0, tk.END)
        self.duration_entry.delete(0, tk.END)
    
    def log_meal(self):
        meal_name = self.meal_entry.get()
        calories = self.calories_entry.get()
        
        # Input validation
        if not meal_name or not calories:
            messagebox.showerror("Error", "Please fill in all fields.")
            return
        
        self.meals.append({
            "Meal Name": meal_name,
            "Calories": calories
        })
        
        messagebox.showinfo("Success", "Meal logged successfully!")
        
        # Clear input fields
        self.meal_entry.delete(0, tk.END)
        self.calories_entry.delete(0, tk.END)
    
    def view_progress(self):
        progress_window = tk.Toplevel(self.root)
        progress_window.title("Progress Overview")
        
        # Display Exercise Log
        tk.Label(progress_window, text="Exercise Log").pack()
        for exercise in self.exercises:
            tk.Label(progress_window, text=f"{exercise['Exercise Type']}: {exercise['Duration (minutes)']} minutes").pack()
        
        # Display Meal Log
        tk.Label(progress_window, text="Meal Log").pack()
        for meal in self.meals:
            tk.Label(progress_window, text=f"{meal['Meal Name']}: {meal['Calories']} calories").pack()

# Main
if __name__ == "__main__":
    root = tk.Tk()
    app = FitnessTrackerApp(root)
    root.mainloop()
